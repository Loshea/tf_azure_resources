{
	"name": "Azure Training Image",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"image": "syro/cloudiactf:azuretf-1.5",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": null
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"hashicorp.terraform",
		"ms-azuretools.vscode-docker",
		"vscode-icons-team.vscode-icons",
		"golang.go",
		"4ops.packer"
	],

	"remoteEnv": {"ARM_CLIENT_ID": "${localEnv:ARM_CLIENT_ID}",
					"ARM_CLIENT_SECRET": "${localEnv:ARM_CLIENT_SECRET}",
					"ARM_SUBSCRIPTION_ID":"${localEnv:ARM_SUBSCRIPTION_ID}",
					"ARM_TENANT_ID": "${localEnv:ARM_TENANT_ID}",
					"ARM_ACCESS_KEY": "${localEnv:ARM_ACCESS_KEY}",
					"RG":"az-104rg",		//default resource group
					"LOC": "eastus2"		//default location

	}

	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
